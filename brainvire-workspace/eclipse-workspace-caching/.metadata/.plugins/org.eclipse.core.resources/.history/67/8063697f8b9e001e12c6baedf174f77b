package com.example.demo.Configuration;

import java.time.Duration;

import javax.cache.Caching;
import javax.cache.spi.CachingProvider;

import org.ehcache.config.CacheConfiguration;
import org.ehcache.config.builders.CacheConfigurationBuilder;
import org.ehcache.config.builders.ExpiryPolicyBuilder;
import org.ehcache.config.builders.ResourcePoolsBuilder;
import org.ehcache.config.units.MemoryUnit;
import org.ehcache.jsr107.Eh107Configuration;
import org.springframework.cache.CacheManager;
import org.springframework.context.annotation.Configuration;

import com.example.demo.Entity.Book;

@Configuration
public class EhCacheConfig {
	
	public CacheManager EhcacheManager() {
		CacheConfiguration<String, Book> cachecConfig = CacheConfigurationBuilder
				.newCacheConfigurationBuilder(String.class,Book.class,
	             ResourcePoolsBuilder.newResourcePoolsBuilder()
	             .offheap(10, MemoryUnit.MB)
	             .build())
				.withExpiry(ExpiryPolicyBuilder.timeToIdleExpiration(Duration.ofSeconds(10)))
				.build();
		
	     CachingProvider cachingProvider = Caching.getCachingProvider();
	     CacheManager cacheManager = cachingProvider.getCacheManager();
	     
	     javax.cache.configuration.Configuration<String, Book> configuration = Eh107Configuration.fromEhcacheCacheConfiguration(cachecConfig);
	        cacheManager.createCache("cacheStore", configuration);
	        return cacheManager;

	}

}
